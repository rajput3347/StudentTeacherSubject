@model StudentTeacherSubject.Models.Student

@{
    ViewData["Title"] = "Delete Student";
}

<h2>Delete Student</h2>

<div class="alert alert-danger">
    <h4 class="alert-heading">Are you sure you want to delete this student?</h4>
    <p><strong>Name:</strong> @Model.Name</p>
    <p><strong>Name:</strong> @Model.FatherName</p>
    <p><strong>Name:</strong> @Model.Address</p>
    <p><strong>Age:</strong> @Model.Age</p>
    <p><strong>Class:</strong> @Model.Class</p>
    <p><strong>Roll Number:</strong> @Model.RollNumber</p>
    @if (!string.IsNullOrEmpty(Model.ImagePath))

    {
        <p><strong>Image:</strong> <img src="@Model.ImagePath" alt="Student Image" style="width:100px;height:auto;" /></p>
    }
</div>
<br />
<form id="deleteForm">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@Model.Id" />
    <button type="button" id="deleteButton" class="btn btn-danger">Delete</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <script>
        document.getElementById('deleteButton').addEventListener('click', function () {
            if (confirm('Are you sure you want to delete this student?')) {
                // Get the anti-forgery token
                var tokenField = document.querySelector('input[name="__RequestVerificationToken"]');
                if (!tokenField) {
                    console.error('Anti-forgery token field not found');
                    return;
                }

                // Get the ID
                var id = document.querySelector('input[name="id"]').value;

                // Send the DELETE request
                fetch(`/Student/DeleteConfirmed/${id}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': tokenField.value
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            window.location.href = '/Student'; // Redirect to the index page or another page
                        } else {
                            alert('An error occurred while deleting the student.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while deleting the student.');
                    });
            }
        });
    </script>
}
